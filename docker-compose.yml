services:
  postgres:
    container_name: container-postgres
    build:
      dockerfile: ./db.Dockerfile
    hostname: localhost
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: stats
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend-net

  pgadmin:
    container_name: container-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    restart: unless-stopped
    networks:
      - backend-net

  backend:
    container_name: container-backend
    build:
      context: ./backend
      dockerfile: ./prod.dockerfile
    ports:
      - 3001:3001
    networks:
      - backend-net
      - frontend-net
    profiles: [ "prod" ]
    depends_on:
      - postgres
    restart: always
    environment:
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: root
      DB_NAME: stats

  frontend:
    container_name: container-frontend
    build:
      context: ./frontend
      dockerfile: ./prod.dockerfile
    depends_on:
      - backend
    restart: always
    environment:
      LIVE_PATCH: "14.16"
      NEXT_PUBLIC_API_HOST: "http://backend:3001"
    ports:
      - 80:3000
    profiles: [ "prod" ]
    networks:
      - frontend-net

  backend-dev:
    container_name: container-backend-dev
    build:
      context: ./backend
      dockerfile: ./dev.dockerfile
    ports:
      - 5001:5001
    networks:
      - frontend-net-dev
      - backend-net
    profiles: [ "dev" ]
    depends_on:
      - postgres
    restart: always
    environment:
      PORT: 5001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: root
      DB_NAME: stats
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend-dev:
    container_name: container-frontend-dev
    build:
      context: ./frontend
      dockerfile: ./dev.dockerfile
    depends_on:
      - backend-dev
    restart: always
    environment:
      LIVE_PATCH: "14.16"
      NEXT_PUBLIC_API_HOST: "http://backend-dev:5001"
    ports:
      - 3000:3000
    profiles: [ "dev" ]
    networks:
      - frontend-net-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres-data:

networks:
  backend-net:
  frontend-net:
  frontend-net-dev:
